const { sequelize } = require('./backend/config/database');

async function testAssociations() {
  try {
    console.log('üß™ Test des associations...\n');
    
    // Importer et configurer les associations
    const setupAssociations = require('./backend/models/associations');
    setupAssociations();
    
    console.log('‚úÖ Associations configur√©es');
    
    // V√©rifier que les mod√®les sont bien charg√©s
    const Offre = sequelize.models.Offre;
    const Module = sequelize.models.Module;
    const Specialite = sequelize.models.Specialite;
    
    console.log('‚úÖ Mod√®les charg√©s');
    
    // V√©rifier les associations
    if (Offre.associations.specialite) {
      console.log('‚úÖ Association Offre -> Specialite OK');
    } else {
      console.log('‚ùå Association Offre -> Specialite manquante');
    }
    
    if (Offre.associations.modules) {
      console.log('‚úÖ Association Offre -> Modules (via OffreModule) OK');
    } else {
      console.log('‚ùå Association Offre -> Modules manquante');
    }
    
    if (Module.associations.offres) {
      console.log('‚úÖ Association Module -> Offres (via OffreModule) OK');
    } else {
      console.log('‚ùå Association Module -> Offres manquante');
    }
    
    // Test simple de r√©cup√©ration
    console.log('\nüîç Test de r√©cup√©ration des offres...');
    const offres = await Offre.findAll({
      include: [
        {
          model: Specialite,
          as: 'specialite',
          attributes: ['id_specialite', 'designation_fr']
        }
      ],
      limit: 3
    });
    
    console.log(`‚úÖ R√©cup√©r√© ${offres.length} offres avec leurs sp√©cialit√©s`);
    
    offres.forEach(offre => {
      console.log(`   - Offre ${offre.id_offre}: ${offre.specialite?.designation_fr || 'N/A'}`);
    });
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test des associations:', error);
  } finally {
    await sequelize.close();
  }
}

// Ex√©cuter le test
testAssociations();
