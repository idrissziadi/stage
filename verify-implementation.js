const fs = require('fs');
const path = require('path');

console.log('üîç V√©rification de l\'impl√©mentation OffreModule...\n');

// V√©rifier les fichiers cr√©√©s
const filesToCheck = [
  'backend/models/OffreModule.js',
  'backend/controllers/CoursController.js',
  'populate-offre-module.js',
  'test-offre-module.js',
  'create-offre-module-table.sql',
  'GUIDE_OFFRE_MODULE.md',
  'verify-constraints.js',
  'start-offre-module-enhanced.bat',
  'start-offre-module-enhanced.ps1'
];

console.log('üìÅ Fichiers √† v√©rifier:');
filesToCheck.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`   ‚úÖ ${file}`);
  } else {
    console.log(`   ‚ùå ${file} - MANQUANT`);
  }
});

// V√©rifier les modifications dans les fichiers existants
console.log('\nüîß V√©rification des modifications:');

// V√©rifier associations.js
const associationsPath = 'backend/models/associations.js';
if (fs.existsSync(associationsPath)) {
  const associationsContent = fs.readFileSync(associationsPath, 'utf8');
  if (associationsContent.includes('OffreModule')) {
    console.log('   ‚úÖ associations.js - Associations OffreModule pr√©sentes');
  } else {
    console.log('   ‚ùå associations.js - Associations OffreModule manquantes');
  }
} else {
  console.log('   ‚ùå associations.js - Fichier non trouv√©');
}

// V√©rifier CoursController.js
const controllerPath = 'backend/controllers/CoursController.js';
if (fs.existsSync(controllerPath)) {
  const controllerContent = fs.readFileSync(controllerPath, 'utf8');
  if (controllerContent.includes('OffreModule')) {
    console.log('   ‚úÖ CoursController.js - Utilisation d\'OffreModule pr√©sente');
  } else {
    console.log('   ‚ùå CoursController.js - Utilisation d\'OffreModule manquante');
  }
} else {
  console.log('   ‚ùå CoursController.js - Fichier non trouv√©');
}

console.log('\nüìã R√©sum√© des actions √† effectuer:');
console.log('1. V√©rifier les contraintes: node verify-constraints.js');
console.log('2. Cr√©er la table OffreModule avec le script SQL');
console.log('3. Ex√©cuter le script de peuplement: node populate-offre-module.js');
console.log('4. Tester la fonctionnalit√©: node test-offre-module.js');
console.log('5. V√©rifier que les stagiaires voient uniquement les modules de leurs offres');

console.log('\nüéØ Prochaines √©tapes:');
console.log('- Utiliser les scripts am√©lior√©s: start-offre-module-enhanced.bat/.ps1');
console.log('- V√©rifier les contraintes avant le peuplement');
console.log('- Tester l\'onglet "ÿØÿ±Ÿàÿ≥Ÿä" pour un stagiaire');
console.log('- Consulter le guide GUIDE_OFFRE_MODULE.md pour plus de d√©tails');

console.log('\nüöÄ Scripts de d√©marrage disponibles:');
console.log('- start-offre-module-enhanced.bat (Windows)');
console.log('- start-offre-module-enhanced.ps1 (PowerShell)');
console.log('- start-offre-module.bat/.ps1 (version simple)');
